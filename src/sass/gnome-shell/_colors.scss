$contrast: 'normal';

@import 'upstream/gnome-shell-sass/_palette.scss';

$selected_bg_color: -st-accent-color!default;
$selected_fg_color: -st-accent-fg-color!default;

@import 'upstream/gnome-shell-sass/_default-colors.scss';

$_base_color_dark: #272a34;
$_base_color_light: #ffffff;

// accent colors
$accent_color: $selected_bg_color;

// link colors
$link_color: $selected_bg_color;
$link_visited_color: st-transparentize($link_color, .6);


// ----------------------------------------------------------------------------- 
// Modified from _colors.scss
//

// global colors
$base_color: if($variant == 'light', darken(#ffffff, 2%), $_base_color_dark)!default;
$bg_color: if($variant == 'light', #ffffff, darken($_base_color_dark, 2%))!default;
$fg_color: if($variant == 'light', #5c616c, #eeeeec);

// OSD elements
$osd_fg_color: $light_1;
$osd_bg_color: lighten($_base_color_dark, 5%);

// system elements (e.g. the overview) that are always dark
$system_base_color: $_base_color_dark;
$system_fg_color: $_base_color_light;

// panel colors
$panel_bg_color: if($variant == 'light', $_base_color_light, $dark_5);
$panel_fg_color: if($variant == 'light', $_base_color_dark, $light_1);
$panel_border_color: transparent;

// card elements
$card_bg_color: if($variant == 'light', mix($fg_color, $bg_color, $background_mix_factor), lighten($bg_color, 7%));
$card_shadow_color: if($variant == 'light', transparentize($dark_5, .97), transparent);
$card_shadow_border_color: transparentize($fg_color, .95);

//
// Derived Colors
//
// colors based on the global defines above

// borders
$borders_color: transparentize($fg_color, $border_opacity);
$outer_borders_color: if($variant == 'light', darken($bg_color, 7%), lighten($bg_color, 5%));

// osd colors
$osd_borders_color: transparentize($osd_fg_color, 0.9);
$osd_outer_borders_color: transparentize($osd_fg_color, 0.98);

// system colors
$system_bg_color: lighten($system_base_color, 5%);
$system_borders_color: transparentize($system_fg_color, .9);
$system_insensitive_fg_color: mix($system_fg_color, $system_bg_color, 50%);
$system_overlay_bg_color: mix($system_base_color, $system_fg_color, 90%); // for non-transparent items, e.g. dash

// insensitive state
$insensitive_fg_color: if($variant == 'light', mix($fg_color, $bg_color, 60%),  mix($fg_color, $bg_color, 50%));
$insensitive_bg_color: mix($bg_color, $base_color, 60%);
$insensitive_borders_color: mix($borders_color, $base_color, 60%);

// checked state
$checked_bg_color: if($variant=='light', darken($bg_color, 7%), lighten($bg_color, 7%));
$checked_fg_color: if($variant=='light', darken($fg_color, 7%), lighten($fg_color, 7%));

// hover state
$hover_bg_color: if($variant=='light', darken($bg_color,9%), lighten($bg_color, 10%));
$hover_fg_color: if($variant=='light', darken($fg_color,9%), lighten($fg_color, 10%));

// active state
$active_bg_color: if($variant=='light', darken($bg_color, 11%), lighten($bg_color, 12%));
$active_fg_color: if($variant=='light', darken($fg_color, 11%), lighten($fg_color, 12%));

// accent colors
$accent_borders_color: if($variant== 'light', st-darken($selected_bg_color, 20%), st-lighten($selected_bg_color, 30%));
